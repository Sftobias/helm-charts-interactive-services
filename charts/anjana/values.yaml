# Default values for jupyter.
global:
  suspend: false

service:
  image:
    version: "harbor.cloud.eosc-siesta.eu/siesta/anjana"
    pullPolicy: IfNotPresent
    custom:
      enabled: false
      version: "harbor.cloud.eosc-siesta.eu/siesta/ubuntu22"

security:
  password: "changeme"
  networkPolicy:
    enabled: false
    from: []
  allowlist:
    enabled: false
    ip: "0.0.0.0/0"

# Array with (templated) extra environment variables to be made accessible within the service
# e.g:
# extraEnvVars:
#   - name: FOO
#     value: "bar"
extraEnvVars: []

environment:
  user: onyxia
  group: users

replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

kubernetes:
  enabled: false
  role: "view"

podAnnotations: {}

podSecurityContext:
  fsGroup: 100

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

networking:
  type: ClusterIP
  clusterIP: None
  service:
    port: 80
  # Custom user-specified extra ports exposition.
  # If ingress or route is enabled, the exposed ports are also made available at the
  # {ingress,route}.userHostname URL (or variations, in case several ports are provided).
  # Note: a non-empty networking.user.ports overrides networking.user.port
  user:
    enabled: false
    port: 5000
    ports: []

ingress:
  enabled: false
  tls: true
  ingressClassName: "nginx"
  hostname: deployments.cloud.eosc-siesta.eu
  userHostname: chart-example-user.local
  secretName: deployments.cloud.eosc-siesta.eu-tls
  hosts:
    - deployments.cloud.eosc-siesta.eu
  useCertManager: false
  certManagerClusterIssuer: ""
  useTlsSecret: true
route:
  enabled: false
  annotations: []
    # route.openshift.io/termination: "reencrypt"
  hostname: chart-example.local
  userHostname: chart-example-user.local
  tls:
    termination: edge
    # key:
    # certificate:
    # caCertificate:
    # destinationCACertificate:
  wildcardPolicy: None

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

persistence:
  enabled: false
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "cinder-sci"
  accessMode: ReadWriteOnce
  size: 10Gi
  # existingClaim: ""


nodeSelector:
  node.kubernetes.io/floating-ip: ""


tolerations: []

affinity: {}

userPreferences:
  darkMode: false
  language: "en"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
  
openshiftSCC:
  enabled: false
  scc: ""

proxy:
  enabled: false
  noProxy: ""
  httpProxy: ""
  httpsProxy: ""

certificates: {}
  # pathToCaBundle: /usr/local/share/ca-certificates/
  # cacerts: ""

message:
  fr: ""
  en: ""
