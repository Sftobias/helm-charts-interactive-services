{
  "$schema": "http://json-schema.org/draft-07/schema",
  "type": "object",
  "properties": {
    "persistence": {
      "type": "object",
      "x-onyxia": {
        "overwriteSchemaWith": "ide/persistence.json"
      },
      "properties": {
        "enabled": {
          "title": "Create a persistent volume",
          "type": "boolean",
          "default": true
        },
        "size": {
          "title": "Persistent volume size",
          "type": "string",
          "default": "10Gi",
          "form": true,
          "render": "slider",
          "sliderMin": 1,
          "sliderMax": 100,
          "sliderStep": 1,
          "sliderUnit": "Gi",
          "x-onyxia": {
            "overwriteDefaultWith": "region.resources.disk",
            "useRegionSliderConfig": "disk"
          },
          "hidden": {
            "value": false,
            "path": "enabled",
            "isPathRelative": true
          }
        }
      }
    },
    "extraEnvVars": {
      "title": "Environment variables available within your service",
      "type": "array",
      "default": [],
      "x-onyxia": {
        "hidden": true,
        "overwriteSchemaWith": "ide/extraenv.json"
      },
      "items": {
        "title": "",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "default": "VAR_NAME",
            "pattern": "^[a-zA-Z0-9_]+$"
          },
          "value": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "networking": {
      "title": "Network access",
      "type": "object",
      "form": true,
      "x-onyxia": {
        "overwriteSchemaWith": "ide/networking.json"
      },
      "properties": {
        "user": {
          "title": "Ports",
          "type": "object",
          "properties": {
            "enabled": {
              "title": "Enable access to your service through specific ports",
              "type": "boolean",
              "default": false
            },
            "port": {
              "title": "Port number to expose",
              "type": "integer",
              "hidden": {
                "value": false,
                "path": "networking/user/enabled"
              },
              "default": 5000
            },
            "ports": {
              "title": "Port numbers to expose",
              "type": "array",
              "items": {
                "type": "integer",
                "uniqueItems": true,
                "default": 5000
              },
              "default": [],
              "x-onyxia": {
                "hidden": true
              }
            }
          }
        }
      }
    },
    "nodeSelector": {
      "title": "Node selector",
      "type": "object",
      "default": {},
      "additionalProperties": {
        "type": "string"
      },
      "x-onyxia": {
        "hidden": false,
        "overwriteDefaultWith": "region.nodeSelector",
        "overwriteSchemaWith": "nodeSelector.json"
      }
    },
    "openshiftSCC": {
      "description": "configuration for openshift compatibility",
      "type": "object",
      "x-onyxia": {
        "overwriteSchemaWith": "ide/openshiftSCC.json"
      },
      "properties": {
        "enabled": {
          "description": "enable rolebinding with openshift scc",
          "type": "boolean",
          "default": false,
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "region.openshiftSCC.enabled"
          }
        },
        "scc": {
          "type": "string",
          "description": "name of scc for rolebinding",
          "default": "anyuid",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "region.openshiftSCC.scc"
          }
        }
      }
    },
    "ingress": {
      "title": "Ingress Details",
      "type": "object",
      "form": true,
      "x-onyxia": {
        "overwriteSchemaWith": "ide/ingress.json"
      },
      "properties": {
        "enabled": {
          "description": "Enable Ingress",
          "type": "boolean",
          "default": true,
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "k8s.ingress"
          }
        },
        "hostname": {
          "type": "string",
          "form": true,
          "title": "Hostname",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "{{project.id}}-{{k8s.randomSubdomain}}-0.{{k8s.domain}}"
          }
        },
        "userHostname": {
          "type": "string",
          "form": true,
          "title": "Hostname",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "{{project.id}}-{{k8s.randomSubdomain}}-user.{{k8s.domain}}"
          }
        },
        "ingressClassName": {
          "type": "string",
          "form": true,
          "title": "ingressClassName",
          "default": "",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "{{k8s.ingressClassName}}"
          }
        },
        "useCertManager": {
          "type": "boolean",
          "description": "Whether CertManager should be used to generate a certificate",
          "default": false,
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "k8s.useCertManager"
          }
        },
        "certManagerClusterIssuer": {
          "type": "string",
          "description": "certManager cluster issuer",
          "title": "CertManager Cluster Issuer",
          "default": "",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "k8s.certManagerClusterIssuer"
          }
        },
        "useTlsSecret": {
          "type": "boolean",
          "description": "Whether you want to use the specified secretName in ingress tls",
          "default": true,
          "x-onyxia": {
            "hidden": false
          }
        },
        "tlsSecretName":{
          "type": "string",
          "default": "deployments.cloud.eosc-siesta.eu-tls",
          "x-onyxia": {
            "hidden": false
          }
        }
      }
    },
    "route": {
      "type": "object",
      "form": true,
      "title": "Route details",
      "properties": {
        "enabled": {
          "description": "Enable route",
          "type": "boolean",
          "default": false,
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "k8s.route"
          }
        },
        "hostname": {
          "type": "string",
          "form": true,
          "title": "Hostname",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "{{project.id}}-{{k8s.randomSubdomain}}-0.{{k8s.domain}}"
          }
        },
        "userHostname": {
          "type": "string",
          "form": true,
          "title": "Hostname",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "{{project.id}}-{{k8s.randomSubdomain}}-user.{{k8s.domain}}"
          }
        }
      }
    },
    "repository": {
      "description": "python repositories for pip and conda",
      "type": "object",
      "properties": {
        "pipRepository": {
          "type": "string",
          "description": "python repository for pip",
          "default": "",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "{{packageRepositoryInjection.pypiProxyUrl}}"
          }
        },
        "condaRepository": {
          "type": "string",
          "description": "python repository for pip",
          "default": "",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "{{packageRepositoryInjection.condaProxyUrl}}"
          }
        }
      }
    },
    "startupProbe": {
      "description": "Startup probe",
      "type": "object",
      "properties": {
        "failureThreshold": {
          "type": "integer",
          "default": 60
        },
        "initialDelaySeconds": {
          "type": "integer",
          "default": 10
        },
        "periodSeconds": {
          "type": "integer",
          "default": 10
        },
        "successThreshold": {
          "type": "integer",
          "default": 1
        },
        "timeoutSeconds": {
          "type": "integer",
          "default": 2
        }
      },
      "default": {
        "failureThreshold": 60,
        "initialDelaySeconds": 10,
        "periodSeconds": 10,
        "successThreshold": 1,
        "timeoutSeconds": 2
      },
      "x-onyxia": {
        "hidden": true,
        "overwriteDefaultWith": "region.startupProbe",
        "overwriteSchemaWith": "ide/startupProbe.json"
      }
    },
    "tolerations": {
      "description": "Array of tolerations",
      "type": "array",
      "items": {
        "type": "object",
        "additionalProperties": true
      },
      "default": [],
      "x-onyxia": {
        "hidden": true,
        "overwriteDefaultWith": "region.tolerations",
        "overwriteSchemaWith": "tolerations.json"
      }
    },
    "userPreferences": {
      "description": "User Preferences",
      "type": "object",
      "properties": {
        "darkMode": {
          "type": "boolean",
          "description": "dark mode is or is not enabled",
          "default": false,
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "user.darkMode"
          }
        },
        "language": {
          "type": "string",
          "description": "Preferred language",
          "default": "en",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "user.lang"
          }
        }
      }
    },
    "global": {
      "description": "Suspend",
      "type": "object",
      "properties": {
        "suspend": {
          "type": "boolean",
          "description": "Suspend this service",
          "default": false,
          "x-onyxia": {
            "hidden": true
          }
        }
      }
    },
    "proxy": {
      "description": "It can be used to inject proxy settings in the services",
      "type": "object",
      "x-onyxia": {
        "overwriteSchemaWith": "proxy.json"
      },
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Inject proxy settings",
          "default": false
        },
        "httpProxy": {
          "type": "string",
          "description": "URL of the enterprise proxy for the region for HTTP.",
          "default": "",
          "hidden": {
            "value": false,
            "path": "proxy/enabled"
          }
        },
        "httpsProxy": {
          "type": "string",
          "description": "URL of the enterprise proxy for the region for HTTPS.",
          "default": "",
          "hidden": {
            "value": false,
            "path": "proxy/enabled"
          }
        },
        "noProxy": {
          "type": "string",
          "description": "enterprise local domain that should not take proxy comma separated",
          "default": "",
          "hidden": {
            "value": false,
            "path": "proxy/enabled"
          }
        }
      }
    },
    "certificates": {
      "description": "It can be used to inject certificate authority into the services, if the Helm chart in the catalog allows it you can bind this value to the Helm chart value to add some certificate authorities in the pod.",
      "type": "object",
      "x-onyxia": {
        "overwriteSchemaWith": "certificates.json"
      },
      "default": {},
      "properties": {
        "cacerts": {
          "type": "string",
          "description": "String of concatenated CA certificates. Alternatively a target URL can be provided.",
          "default": "",
          "x-onyxia": {
            "hidden": true
          }
        },
        "pathToCaBundle": {
          "type": "string",
          "description": "String path where a bundle is made or injected by third party solution",
          "default": "/usr/local/share/ca-certificates/",
          "x-onyxia": {
            "hidden": true
          }
        }
      }
    },
    "message": {
      "type": "object",
      "description": "Warning message",
      "x-onyxia": {
        "hidden": true,
        "overwriteSchemaWith": "ide/message.json"
      },
      "properties": {
        "fr": {
          "type": "string",
          "description": "message à ajouter dans les notes",
          "default": ""
        },
        "en": {
          "type": "string",
          "description": "message to add in notes",
          "default": ""
        }
      }
    }
  }
}
