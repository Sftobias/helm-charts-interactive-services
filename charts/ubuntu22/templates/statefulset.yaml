{{- $fullName := include "library-chart.fullname" . -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "library-chart.fullname" . }}
  labels:
    {{- include "library-chart.labels" . | nindent 4 }}
spec:

  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "library-chart.fullname" . }}
  selector:
    matchLabels:
      {{- include "library-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      labels:
        {{- include "library-chart.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: home
        {{- if (.Values.persistence).enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "library-chart.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 10Gi
        - name: config-files
          emptyDir: {}
        {{- if (.Values.discovery).hive }}
        - name: secret-hive
          secret:
            secretName: {{ include "library-chart.secretNameHive" . }}
        {{- end }}
        {{- if (.Values.proxy).enabled }}
        - name: secret-proxy
          secret:
            secretName: {{ include "library-chart.secretNameProxy" . }}
        {{- end }}
        {{- if (.Values.discovery).metaflow }}
        - name: secret-metaflow
          secret:
            secretName: {{ include "library-chart.secretNameMetaflow" . }}
        {{- end }}
        {{- if (.Values.certificates).cacerts }}
        - name: cacerts
          secret:
            secretName: {{ include "library-chart.secretNameCacerts" . }}
        {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "library-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      subdomain: {{ include "library-chart.fullname" . }}
      hostname: jupyter
      initContainers:
        - name: make-secrets-writable
          image: inseefrlab/onyxia-base:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              echo 'initContainer make-secrets-writable is started';
              {{- if .Values.discovery.hive }}
              mkdir /dest/hive;
              cp /src/hive/hive-site.xml /dest/hive/hive-site.xml;
              {{- end }}
              {{- if .Values.discovery.metaflow }}
              mkdir /dest/metaflow/;
              cp /src/metaflow/config.json /dest/metaflow/config.json;
              {{- end }}
              {{- if and .Values.certificates .Values.certificates.cacerts }}
              mkdir /dest/cacerts;
              {{- if regexMatch "^https?://" .Values.certificates.cacerts }}
              curl -s $(cat /cacerts/ca-certs.url) -o /tmp/ca.pem
              {{- else }}
              cp /cacerts/ca.pem /tmp/ca.pem
              {{- end }}
              awk 'BEGIN {c=0;} /BEGIN CERT/{c++} { print > "/dest/cacerts/cert." c ".crt"}' < /tmp/ca.pem;
              {{- end }}
          volumeMounts:
            - name: config-files
              mountPath: /dest
            {{- if (.Values.certificates).cacerts }}
            - name: cacerts
              mountPath: /cacerts
            {{- end }}
            {{- if (.Values.discovery).hive }}
            - name: secret-hive
              mountPath: /src/hive
            {{- end }}
            {{- if (.Values.discovery).metaflow }}
            - name : secret-metaflow
              mountPath: /src/metaflow
            {{- end }}
          resources:
            limits:
              cpu: 50m
              memory: 50Mi
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.service.image.custom.enabled }}
          image: "{{ .Values.service.image.custom.version }}"
          {{- else }}
          image: "{{ .Values.service.image.version }}"
          {{- end }}
          imagePullPolicy: {{ .Values.service.image.pullPolicy }}
          env:
            - name: KUBERNETES_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: IMAGE_NAME
              {{- if .Values.service.image.custom.enabled }}
              value: "{{ .Values.service.image.custom.version }}"
              {{- else }}
              value: "{{ .Values.service.image.version }}"
              {{- end }}
            - name: NB_USER
              value: {{ .Values.environment.user }}
            - name: PROJECT_USER
              value: {{ .Values.environment.user }}
            - name: PROJECT_GROUP
              value: {{ .Values.environment.group }}
            - name: ROOT_PROJECT_DIRECTORY
              value: /home/{{ .Values.environment.user }}/work
            {{- if .Values.init.regionInit }}
            - name: REGION_INIT_SCRIPT
              value: {{ .Values.init.regionInit }}
            {{- end }}
            {{- if .Values.init.personalInit }}
            - name: PERSONAL_INIT_SCRIPT
              value: {{ .Values.init.personalInit }}
            {{- end }}
            {{- if .Values.init.personalInitArgs }}
            - name: PERSONAL_INIT_ARGS
              value: {{ .Values.init.personalInitArgs }}
            {{- end }}
            {{- if .Values.environment.root }}
            - name: GRANT_SUDO
              value: "yes"
            {{- end }}
            {{- if .Values.userPreferences.darkMode }}
            - name: DARK_MODE
              value: "true"
            {{- end }}
          envFrom:
            - secretRef:
                name: {{ include "library-chart.secretNameToken" . }}
            {{- if .Values.extraEnvVars }}
            - secretRef:
                name: {{ include "library-chart.secretNameExtraEnv" . }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /home/{{ .Values.environment.user }}/work
              subPath: work
              name: home
            - mountPath: /dev/shm
              name: dshm
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
